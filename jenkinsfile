pipeline {
    agent any
    tools {
       terraform 'terraform'
    }
    
    parameters {
        booleanParam(name: 'destroy', defaultValue: false, description: 'Destroy Terraform build?')
    }    
	
	environment {
        AWS_ACCESS_KEY_ID     = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
    }
	
    stages {
       stage('Git checkout for Docker') {
        when {
                not {
                    equals expected: true, actual: params.destroy
                }
        }
           steps{
                git branch: 'main', credentialsId: 'Github', url: 'https://github.com/maatros/docker'
            }
        }
        stage('Terraform Init for Docker') {
        when {
                not {
                    equals expected: true, actual: params.destroy
                }
        }
            steps{
                sh 'terraform init -reconfigure'
            }
        }
        stage('Terraform Plan for Docker') {
        when {
                not {
                    equals expected: true, actual: params.destroy
                }
        }
            steps{
                sh 'terraform plan'
            }
        }
        stage('Terraform Apply for Docker') {
        when {
                not {
                    equals expected: true, actual: params.destroy
                }
        }
            steps{
                sh 'terraform apply --auto-approve'
            }
        }
        stage('Terraform Destroy for Docker') {
            when {
                equals expected: true, actual: params.destroy
            }
            steps{
                sh 'terraform destroy --auto-approve'
            }
        }
    }

    
}